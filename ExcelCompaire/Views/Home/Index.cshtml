@using ExcelCompaire.Models
@using Section = DocumentFormat.OpenXml.Office2010.PowerPoint.Section



@{
    ViewBag.Title = "Home Page";
}

<div class="panel panel-info" style="margin-top: 20px;">
    <div class="panel-heading">Upload Excel Files</div>
    <div class="panel-body">
        @using (Ajax.BeginForm("UploadFiles", "Home", new AjaxOptions { HttpMethod = "POST" }, new { @id = "excelForm", @class = "row", role = "form", enctype = "multipart/form-data" }))
        {
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group col-lg-12">
                        <label for="planFilePath">Plan Excel</label>
                        <input type="file" class="form-control" id="planFilePath" name="files">
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="form-group col-lg-12 ">
                        <label for="productFilePath">Product Excel</label>
                        <input type="file" class="form-control" id="productFilePath" name="files">
                    </div>
                </div>
            </div>
            <div class="row">
                <button type="submit" class="btn btn-default pull-right" style="margin-right: 50px;">Upload</button>
            </div>
        }
    </div>
</div>


<div class="panel panel-info" style="margin-top: 20px;">
    <div class="panel-heading">Upload Excel Files</div>
    <div class="panel-body">
        @using (Ajax.BeginForm("UploadFiles", "Home", new AjaxOptions { HttpMethod = "POST" }, new { @id = "excelForm", @class = "row", role = "form", enctype = "multipart/form-data" }))
        {

            if (ViewBag.ExcelFiles != null)
            {

                foreach (var a in ViewBag.ExcelFiles)
                {
                    <span>@a</span>
                }
            }


            <div class="row">
                <button type="submit" class="btn btn-default pull-right" style="margin-right: 50px;">Upload</button>
            </div>
        }
    </div>
</div>




@section scripts {

    @*<script>

            $('input[type=file]').change(function () {
                console.dir(this.value);

            })

        </script>*@

}











@*@(Html.EJ().Spreadsheet<object>("Spreadsheet")
              .ScrollSettings(scroll =>
              {
                  scroll.Height(510);
              })
              .ImportSettings(import =>
              {
                  import.ImportMapper("Home/Import");
              })
              .ExportSettings(export =>
              {
                  export.ExcelUrl("ExcelExport");
                  export.CsvUrl("CsvExport");
                  export.PdfUrl("PdfExport");
              })
              .Sheets(sheet =>
              {
                  sheet.RangeSettings(range =>
                  {
                      range.Datasource((IEnumerable<object>)ViewBag.Datasource).Add();
                  }).Add();
              })
              .ClientSideEvents(events => events.LoadComplete("loadComplete").OpenFailure("openfailure"))
    )


    @section scripts{
        <script type="text/javascript">
            function loadComplete(args) {
                var xlFormat = this.XLFormat;
                if (!this.isImport) {
                    this.setWidthToColumns([142, 132, 110, 105, 102, 112, 122, 122, 102]);
                    xlFormat.format({ "style": { "font-weight": "bold" } }, "A1:H1");
                    xlFormat.format({ "type": "shortdate" }, "B2:B11");
                    xlFormat.format({ "type": "time" }, "C2:C11");
                    xlFormat.format({ "type": "currency" }, "E2:H11");
                    this.XLRibbon.updateRibbonIcons();
                }
            }
            function openfailure(args) {
                var xlObj = $("#Spreadsheet").data("ejSpreadsheet");
                xlObj.alert(args.statusText);
            }
        </script>
    }*@